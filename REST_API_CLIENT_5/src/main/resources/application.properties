#JPA defining dialect and not (none) dropping table if exists
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.ddl-auto= validate
#spring.jpa.hibernate.ddl-auto= update
#spring.jpa.hibernate.ddl-auto= create
 
#server.port=8081

#spring.data.rest.base-path=/api

spring.jpa.hibernate.use-new-id-generator-mappings=false

spring.thymeleaf.cache=false

#spring.jpa.hibernate.use-new-id-generator-mappings=true
#spring.jpa.properties.hibernate.id.new_generator_mappings=true
#spring.jpa.show-sql=true
# Initialization
#spring.datasource.schema=classpath:h2/schema.sql
#spring.datasource.data=classpath:h2/data.sql

#spring.jpa.properties.hibernate.default_schema=<schema>

# H2
spring.h2.console.enabled=true
spring.h2.console.path=/h2
spring.datasource.driver-class-name=org.h2.Driver

#Hibernate
#spring.jpa.hibernate.use-new-id-generator-mappings=true

# Datasource
spring.datasource.url=jdbc:h2:tcp://localhost/~/H2DB/library


spring.datasource.username=root
spring.datasource.password=root

server.port=8081